# Generated by Django 4.2.4 on 2023-09-19 19:02

from django.db import migrations, models
import django.db.models.deletion
import main.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('django_celery_beat', '0018_improve_crontab_helptext'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('title', models.CharField(max_length=64, verbose_name='Наименование товара')),
                ('shop', models.CharField(blank=True, max_length=32, null=True, verbose_name='Интернет-магазин')),
                ('description', models.CharField(blank=True, max_length=512, null=True, verbose_name='Описание товара')),
                ('old_price', models.CharField(blank=True, max_length=32, null=True, verbose_name='Цена до скидки')),
                ('current_price', models.CharField(max_length=32, verbose_name='Цена со скидкой')),
                ('url', models.URLField(primary_key=True, serialize=False, unique=True, verbose_name='URL товара')),
                ('image', models.URLField(blank=True, null=True, verbose_name='URL изображения')),
                ('brand', models.CharField(blank=True, max_length=32, null=True, verbose_name='Бренд')),
                ('category', models.CharField(blank=True, max_length=32, null=True, verbose_name='Категория')),
                ('click_rate', models.IntegerField(blank=True, default=0, null=True, verbose_name='Рейтинг кликов')),
            ],
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_notification', models.BooleanField(default=False, verbose_name='Уведомление на почту')),
                ('lk_notification', models.BooleanField(default=False, verbose_name='Уведомление в личном кабинете')),
                ('notification_type', models.IntegerField(choices=[(0, 'Обо всех изменениях'), (1, 'Об увеличении скидки'), (2, 'О желаемой скидке')], default=0, verbose_name='Тип уведомлений')),
                ('endpoint', models.URLField(verbose_name='Ссылка для отслеживания')),
                ('price', models.IntegerField(blank=True, null=True, verbose_name='Желаемая цена')),
                ('discount', models.IntegerField(blank=True, null=True, verbose_name='Желаемая скидка')),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='Дата создания запроса')),
                ('completed_at', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Дата завершения запроса')),
                ('period_date', models.DateTimeField(verbose_name='Время отслеживания')),
                ('status', models.IntegerField(choices=[(0, 'В работе'), (1, 'Выполнен'), (2, 'Ошибка в URL')], default=0, verbose_name='Статус запроса')),
                ('task', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='django_celery_beat.periodictask')),
            ],
        ),
        migrations.CreateModel(
            name='ProductHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_updated', models.DateTimeField(auto_now_add=True, verbose_name='Последнее обновление цены')),
                ('updated_price', models.CharField(max_length=32, verbose_name='Обновленная цена')),
                ('product_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.product')),
            ],
        ),
        migrations.CreateModel(
            name='Notifications',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=256, verbose_name='Сообщение')),
                ('created_at', models.DateField(auto_now_add=True)),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification', to='main.request')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(blank=True, max_length=150, null=True, verbose_name='Логин')),
                ('email', models.EmailField(max_length=254, null=True, verbose_name='Эл. почта')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активирован')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Персонал')),
                ('phone', models.CharField(blank=True, max_length=30, verbose_name='Номер телефона')),
                ('first_name', models.CharField(max_length=32, null=True, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=32, null=True, verbose_name='Фамилия')),
                ('age', models.IntegerField(null=True, verbose_name='Возраст')),
                ('gender', models.CharField(blank=True, choices=[('M', 'Мужчина'), ('W', 'Женщина')], max_length=1, verbose_name='Пол')),
                ('city', models.CharField(blank=True, max_length=32, verbose_name='Город')),
                ('description_user', models.CharField(blank=True, max_length=512, verbose_name='О себе')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'unique_together': {('email', 'username')},
            },
            managers=[
                ('objects', main.managers.UserManager()),
            ],
        ),
    ]
