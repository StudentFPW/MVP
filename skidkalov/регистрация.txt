Для фронтэнда. В скобках заметки для бэка.

Email регистрация:
1. Создание пользователя.
POST '/auth/users/'
Body:
{
    "email": "",
    "password": "",
    "re_password": ""
}

Статус ответа: 201
В теле ответа поступит id и email пользователя:
Body:
{
    "email": "email@mail.ru",
    "id": 5
}
//(эндпоинт в urls 'djoser.urls')

2. Активация пользователя.
POST '/auth/users/activation/'
Body:
{
    "uid": "{uid}"
    "token": "{token}"
}
Пример:
{
    "uid": "Ms"
    "token": "78Hh78h88H87HG6H7J9867g6h87657G68H"
}
Статус ответа: 204
uid и token получить, когда пользователь перейдет по ссылке из email:
'/auth/activate/{uid}/{token}'

3. Аутентификация (вход):
POST '/auth/token/login/'
Body:
{
    "username": "",
    "password": ""
}

Статус ответа: 200
В ответ придет токен для авторизации.
Пример:
{
    "auth_token": "e6da55505e4c9b370921cf91964db0f651ac9dd4"
}

//(эндпоинт в urls 'djoser.urls.authtoken')


4. Авторизация.
Для запросов, требующих авторизации, необходимо передавать полученный auth_token:
Headers:
{
    ...
    "Authorization": "Token {token}"
}
Например:
{
    ...
    "Authorization": "Token b35f154d9e14f1271dbc9844f4a0e3013f56ce00"
}

OAuth регистрация/аутентификация.

1. Регистрация/аутентификация:
POST '/auth/convert-token/'
Body:
{
    "client_id": "<CLIENT ID>",
    "grant_type": "convert_token",
    "client_secret": "<CLIENT SECRET>",
    "backend": "<PROVIDER>",
    "token": "<USER ACCESS TOKEN>",
}

client_id и client_secret получить у бэка (или админа). См. https://github.com/posholokia/skidkalov/blob/main/README.md раздел Настройка Oauth.
grant_type - "convert_token" для всех провайдеров.
backend:
    Google - "google-oauth2"
    Yandex - "yandex-oauth2"
    Vkontakte - "vk-oauth2"
token - access_token, получить от провайдера после аутентификации пользователя.

Статус овтета: 200
Ответ:
{
    "access_token": "Z8oT5kQGGwMgYnHHo5LdBUenhFHtum",  // токен авторизации пользователя
    "expires_in": 35776.005997,  // время жизни токена
    "scope": "read write",
    "refresh_token": "pV3iG9tNVd9wr03lqAtVG3DJKvb3EM",  // для обновления access_token
    "token_type": "Bearer"  // при авторизации добавляется перед access_token
}

2.  Авторизация.
Для запросов, требующих авторизации, необходимо передавать полученный access_token:
Headers:
{
    ...
    "Authorization": "Bearer {access_token}"
}
Например:
{
    ...
    "Authorization": "Bearer UJkFgwJABXoJYOyUXEhAn4gSbQqYDQ"
}




